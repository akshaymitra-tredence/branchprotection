name: SonarQube analysis

on:
  push:
    branches: [ "feature/x" ]
  
  workflow_dispatch:

jobs:
  sonarqube-analysis:
    runs-on: self-hosted
    name: SonarQube Analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest coverage

      # This is the key change: we need to run coverage from the root
      # but point it to the source code directory.
      - name: Run tests with coverage
        run: |
          coverage run --source=app -m pytest
          coverage xml -o coverage.xml
        continue-on-error: true

      # Debugging step: check if the coverage file exists and its contents.
      # This is a crucial step for troubleshooting!
      - name: Debug - Check coverage.xml
        run: |
          echo "Looking for coverage.xml in $(pwd)"
          if [ -f coverage.xml ]; then
            echo "coverage.xml found!"
            cat coverage.xml | head -n 20 # Print the first 20 lines to check paths
          else
            echo "coverage.xml NOT FOUND! SonarQube will fail."
            exit 1 # Fail the workflow if the file is not there
          fi

      - name: Download and setup SonarScanner
        run: |
          if [ ! -d "sonar-scanner-5.0.1.3006-linux" ]; then
            wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
            unzip sonar-scanner.zip
          fi
          export PATH=$PWD/sonar-scanner-5.0.1.3006-linux/bin:$PATH
          echo "$PWD/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "http://host.docker.internal:9003"
        run: |
          sonar-scanner \
            -Dsonar.projectKey=branchprotection-git \
            -Dsonar.sources=app \
            -Dsonar.tests=tests \
            -Dsonar.language=py \
            -Dsonar.python.coverage.reportPaths=coverage.xml \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

      # ... (your commented-out jobs can be added back here)