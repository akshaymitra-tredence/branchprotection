name: SonarQube Analysis

on:
  push:
    branches: [ "feature/x" ]
  workflow_dispatch:

jobs:
  sonarqube-analysis:
    runs-on: self-hosted
    name: SonarQube Analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Recommended for better analysis relevancy

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest coverage pytest-cov

      - name: Run tests with coverage (continue on failure)
        run: |
          set +e
          python -m pytest . \
            --cov=. \
            --cov-report=xml:coverage.xml \
            --junit-xml=test-results.xml \
            -v
          TEST_EXIT_CODE=$?
          echo "Test exit code: $TEST_EXIT_CODE"
          echo "=== Test Results Summary ==="
          if [ $TEST_EXIT_CODE -eq 0 ]; then
            echo "✅ All tests passed"
          else
            echo "❌ Some tests failed (exit code: $TEST_EXIT_CODE)"
          fi
          if [ ! -f "coverage.xml" ]; then
            echo "Generating coverage.xml manually..."
            python -m coverage xml
          fi
          echo "=== Coverage Summary ==="
          python -m coverage report || echo "Could not generate coverage report"
          set -e

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=branchprotection-git
            -Dsonar.projectName="Branch Protection Git Project"
            -Dsonar.sources=.
            -Dsonar.inclusions=**/*.py
            -Dsonar.test.inclusions=**/*test*.py
            -Dsonar.exclusions=**/*test*.py
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.xunit.reportPath=test-results.xml
            -Dsonar.python.version=3.9
            -Dsonar.sourceEncoding=UTF-8

      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        timeout-minutes: 5

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            coverage.xml
            test-results.xml
