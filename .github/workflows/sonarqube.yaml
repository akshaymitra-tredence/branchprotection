name: SonarQube analysis

on:
  push:
    branches: [ "feature/x" ]
  
  workflow_dispatch:

jobs:
  sonarqube-analysis:
    runs-on: self-hosted
    name: SonarQube Analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # We need `pytest-xunit` or newer `pytest` versions handle this natively.
          # The command below installs a version that includes the junit feature.
          pip install pytest coverage pytest-xunit

      - name: Run tests, generate coverage and JUnit reports
        run: |
          # The `--junitxml=report.xml` flag tells pytest to generate the report.
          # The `|| true` is still there to ensure the step doesn't fail the job.
          coverage run --source=app -m pytest --junitxml=report.xml || true
          coverage xml -o coverage.xml

      - name: Debug - Check for report files
        run: |
          echo "Checking for report files in $(pwd)"
          ls -la coverage.xml report.xml
          echo "Displaying the first 20 lines of report.xml"
          head -n 20 report.xml

      - name: Download and setup SonarScanner
        run: |
          if [ ! -d "sonar-scanner-5.0.1.3006-linux" ]; then
            wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
            unzip sonar-scanner.zip
          fi
          echo "$PWD/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "http://host.docker.internal:9003"
        run: |
          sonar-scanner \
            -Dsonar.projectKey=branchprotection-git \
            -Dsonar.sources=app \
            -Dsonar.tests=tests \
            -Dsonar.language=py \
            -Dsonar.python.coverage.reportPaths=coverage.xml \
            -Dsonar.testExecutionReportPaths=report.xml \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN